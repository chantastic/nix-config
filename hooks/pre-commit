#!/bin/sh

# Pre-commit hook to prevent accidentally committing secrets
# Checks staged files for common secret patterns

# Common secret patterns to detect
SECRET_PATTERNS="(API_KEY|SECRET|PASSWORD|TOKEN|PRIVATE_KEY|_KEY=|_SECRET=|_TOKEN=|_PASSWORD=)"

# Check if any staged files contain potential secrets
if git diff --cached --name-only | xargs grep -l -E "$SECRET_PATTERNS" 2>/dev/null; then
    echo "⚠️  Potential secret detected in staged files!"
    echo ""
    echo "The following files contain potential secrets:"
    git diff --cached --name-only | xargs grep -l -E "$SECRET_PATTERNS" 2>/dev/null | sed 's/^/  - /'
    echo ""
    echo "Please review and remove any actual secrets before committing."
    echo "If these are false positives, you can bypass this check with:"
    echo "  git commit --no-verify"
    exit 1
fi

# Additional check for common secret file patterns
STAGED_FILES=$(git diff --cached --name-only)
for file in $STAGED_FILES; do
    case "$file" in
        *.pem|*.key|*.p12|*.pfx|id_rsa|id_dsa|id_ecdsa|id_ed25519)
            echo "⚠️  Potential secret file detected: $file"
            echo "Please verify this is not a private key or certificate."
            echo "If intentional, bypass with: git commit --no-verify"
            exit 1
            ;;
        .env|.env.*|*credentials*|*secrets*)
            if [ -f "$file" ]; then
                echo "⚠️  Environment/secrets file detected: $file"
                echo "Please verify this doesn't contain sensitive data."
                echo "If safe to commit, bypass with: git commit --no-verify"
                exit 1
            fi
            ;;
    esac
done

exit 0
